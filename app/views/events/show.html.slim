.row
  .col-md-7.show-main.my-4.mr-2
    .my-4
      h2
        = @event.event_name
    .content
      h5.name.m-3.p-2
        = Event.human_attribute_name(:event_content)
      .px-4.pb-4
        = simple_format(h(@event.event_content), {}, sanitize: false, wrapper_tag: "div")
    .content-group
      h5.name.m-3.p-1
        = Event.human_attribute_name(:overview)
      .px-4.pb-4
        = simple_format(h(@event.overview), {}, sanitize: false, wrapper_tag: "div")
    .content-group
      h5.name.m-3.p-1
        = Event.human_attribute_name(:necessities)
      .px-4.pb-4
        = simple_format(h(@event.necessities), {}, sanitize: false, wrapper_tag: "div")
    .content-group
      h5.name.m-3.p-1
        |  主催者 
      .px-4.pb-4
        .media.my-4
          .media-left
            = image_tag get_profile_image(@event_user.image), class: 'media-object circle', :style => 'width:70px;height:70px'
          .media-body.pl-4
            h6.media-heading
              = link_to @event_user.username, user_path(@event_user)
            = simple_format(h(@event_user.profile), {}, sanitize: false, wrapper_tag: "div")
    .content-group
      h5.name.m-3.p-1
        |  開催場所：
        = @event.access_map.address
      .px-4.pb-4
        #map
  
  .col-md-4.show-sub.my-4
    .date-area.pt-5
      h5
        = date_with_slash(@event.start_at)
      p
        = format_event_time(@event.start_at, @event.end_at)
        - if current_user != @event.user
          - if @event_member.new_record?
            .m-3[style="text-align: center"]
              = form_with model: [@event, @event_member], local: true do |f|
                = f.hidden_field :event_id, value: @event.id
                = f.hidden_field :user_id, value: current_user.id if current_user
                = f.submit 'イベントに参加する', class: 'btn btn-primary btn-md', id: 'event_join'
          - else
            .m-3[style="text-align: center"]
              = link_to '参加をキャンセル', event_event_member_path(@event, @event_member), method: :delete, data: { confirm: "キャンセルしますか?" }, class: 'btn btn-warning btn-md'
        - else
          .m-3[style="text-align: center"]
            = link_to 'イベントを編集する', edit_event_path(@event), class: "btn btn-success btn-md"
      .mini-content
        h6
          | 【募集締め切り】
        p#capacity_over
          |  当日までお申し込み頂けます。
      .mini-content.pt-3
        h6
          | 【参加者】
        p
          strong
            = EventMember.count_event_members(@event)
          | &nbsp;/定員 
          = @event.event_capacity
          | 人

.comments
  .col-md-11.show-main.my-3.mr-2
    .pull-right
      a.btn.btn-primary.btn-sm.m-1[data-toggle="collapse" href="#newCommentForm" role="button" aria-expanded="false" aria-controls="newCommentForm"]
        i.fa.fa-comment
          |  新規コメント

    h5.m-2.pb-2.comment-title
      | コメント・連絡事項
    #newCommentForm.collapse.m-2
      = form_with model: [@event, @new_comment], remote: true do |f|
        = f.hidden_field :event_id, value: @event.id
        = f.text_area :text, class: 'form-control'
        = f.submit '送信する', class: 'btn btn-primary m-1'
    .jscroll
      = render 'comments/comments', comments: @comments, new_comment: @new_comment, event: @event
      .skill-list
        = link_to_next_page @comments, '次のページ', class: 'next'

= javascript_include_tag src="https://maps.googleapis.com/maps/api/js?v=3.exp&key=#{ENV['GOOGLE_MAP_API_KEY']}&callback=initMap", async: true, defer: true

javascript:
  
  if (#{EventMember.event_capacity_is_over?(@event)} && #{@event_member.new_record?}) {
    document.getElementById('event_join').disabled = true;
    var notice = document.getElementById('capacity_over');
    notice.innerHTML = '満席になりました';
    notice.style.color = 'red';
  }

  function initMap() {
    let latlng = { lat: #{@event.access_map.latitude}, lng: #{@event.access_map.longitude} };
    let map = new google.maps.Map(document.getElementById('map'), {
      center: latlng,
      zoom: 17
    });

    let transitLayer = new google.maps.TransitLayer();
    transitLayer.setMap(map);

    let contentString = "#{@event.access_map.address}";
    let infoWindow = new google.maps.InfoWindow({
      content: contentString
    });

    var marker = new google.maps.Marker({
      map: map,
      position: latlng,
      title: contentString
    });

    marker.addListener('click', function() {
      infoWindow.open(map, marker);
    });
  }
