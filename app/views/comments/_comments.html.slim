.col-md-11.show-main.my-5.mr-2
  .pull-right
    a.btn.btn-primary.btn-sm.m-1[data-toggle="collapse" href="#newCommentForm" role="button" aria-expanded="false" aria-controls="newCommentForm"]
      i.fa.fa-comment
        |  新規コメント

  h5.m-2.pb-2.comment-title
    | コメント・連絡事項
  #newCommentForm.collapse.m-2
    = form_with model: new_comment, url: { controller: 'comments', action: 'create' }, remote: true do |f|
      = f.hidden_field :event_id, value: event.id
      = f.text_area :text, class: 'form-control'
      = f.submit '送信する', class: 'btn btn-primary m-1', id: 'commentBody'
  - comments.each do |comment|
    - if comment.reply_to.blank?
      .px-4.mt-3
          .media.my-2
            .media-left
              = image_tag get_profile_image(comment.user.image), class: 'media-object circle', :style => 'width:50px;height:50px'
            .media-body.pl-4
              .pull-right
                a[data-toggle="collapse" href="#returnToComment#{comment.id}" role="button" aria-expanded="false" aria-controls="returnToComment#{comment.id}"]
                  i.fa.fa-reply
                - if comment&.user.id == current_user&.id
                  = link_to "/comments/#{comment.id}", method: :delete, data: { confirm: 'コメントを削除しますか?' }, remote: true do
                    i.fa.fa-trash.ml-2
              h6.media-heading.col-md-5
                = link_to comment.user.username, user_path(comment.user)
                small[style="font-size: small"]
                  | &nbsp;&nbsp;&nbsp; #{comment.updated_at.year}/#{date_with_slash(comment.updated_at)}投稿
              = simple_format(h(comment.text), {}, sanitize: false, wrapper_tag: "div")
              / 返信コメント投稿フォーム
              = content_tag :div, id: "returnToComment#{comment.id}", class: "collapse m-2"
                = form_with model: new_comment, url: { controller: 'comments', action: 'create' }, remote: true do |f|
                  = f.hidden_field :event_id, value: event.id
                  = f.hidden_field :reply_to, value: comment.id
                  = f.text_area :text, class: 'form-control', id: 'commentBody'
                  = f.submit '送信する', class: 'btn btn-primary btn-sm m-1'
          
          / 返信コメント表示
          - if count_reply_comments(comment) > 0
            .px-4.pb-2
              a[data-toggle="collapse" href="#returnedComments#{comment.id}" role="button" aria-expanded="false" aria-controls="returnedComments#{comment.id}" style="font-size: small"]
                i.fa.fa-caret-down
                | &nbsp;#{count_reply_comments(comment)}件の返信
              = content_tag :div, id: "returnedComments#{comment.id}", class: 'collapse m-2'
                - select_returned_comments(comment).each do |returned_comment|
                  .media.my-2
                    .media-left
                      = image_tag get_profile_image(returned_comment.user.image), class: 'media-object circle', :style => 'width:50px;height:50px'
                    .media-body.pl-2
                      .pull-right
                        - if returned_comment.user&.id == current_user&.id
                          = link_to "/comments/#{returned_comment.id}", method: :delete, data: { confirm: 'コメントを削除しますか?' }, remote: true do
                            i.fa.fa-trash.ml-2
                      h6.media-heading.col-md-5
                        = link_to returned_comment.user.username, user_path(returned_comment.user)
                        small[style="font-size: small"]
                          | &nbsp;&nbsp;&nbsp; #{returned_comment.updated_at.year}/#{date_with_slash(returned_comment.updated_at)}投稿
                      = simple_format(h(returned_comment.text), {}, sanitize: false, wrapper_tag: "div")
                
        